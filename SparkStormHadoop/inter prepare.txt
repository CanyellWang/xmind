试准备
1.1 简历
1.1.1 学历背景
1.1.2 工作经历
1.1.3 项目经验
1.1.4 技术点
1.1.5 亮点
1.2 面试官对技术的期待
1.2.1 技术知识的深度和广度
1.2.2 设计能力
1.2.3 项目经历
1.2.4 学习能力
1.2.5 创新能力
1.2.6 技术攻关的能力
1.2.7 线上应急的意识
1.3 其他能力
1.3.1 责任心
1.3.2 团队精神
1.3.3 主动性
1.3.4 性格
1.3.5 职业精神
1.3.6 沟通协作的能力
1.3.7 分享精神
1.3.8 项目管理经验

2 编程题
2.1 编程思路
2.2 编程示例

3 算法题
3.1 数据结构
3.1.1 数组
3.1.2 链表
3.1.3 栈
3.1.4 队列
3.1.5 哈希
3.1.6 堆
3.1.7 树
3.2 算法
3.2.1 排序
3.2.2 查找
3.3 高级算法
3.3.1 递归
3.3.2 剪枝
3.3.3 贪婪
3.3.4 动态规划
3.3.5 字符串算法
3.3.6 后缀数组
3.4 大数据算法
3.4.1 哈希散列和分桶
3.4.2 位图
3.4.3 布隆过滤器
3.4.4 最大堆和最小堆
3.4.5 外排序
3.4.6 倒排索引

4 Java语言
4.1 集合
4.2 异常
4.3 泛型
4.4 内部类
4.5 反射
4.6 序列化
4.7 对象类
4.8 字符串
4.9 引用
4.10 流
4.11 ThreadLocal

5 JVM高级特性
5.1 多线程与并发
5.2 类加载
5.3 GC
5.4 NIO

6 SSH
6.1 Spring
6.2 Struts
6.3 Hibernate&Mybatis

7 系统层
7.1 Linux命令
7.2 脚本
7.3 进程和线程

8 数据库
8.1 基础支持
8.2 事务
8.3 锁
8.4 索引
8.5 SQL优化
8.6 分库分表
8.7 复制模型
8.8 备份

9 缓存
9.1 基础知识
9.2 Redis和Memcache的区别
9.3 缓存分片
9.4 缓存穿透
9.5 缓存预热

10 消息队列
10.1 基础支持
10.2 Kafka
10.3 RabbitMQ

11 设计能力
11.1 面向对象的设计
11.2 设计模式
11.3 UML
11.4 技术评审
11.4.1 非功能质量
11.4.2 技术评审提高
11.4.3 技术评审示例
11.5 大规模高并发设计思路
11.6 设计案例
11.6.1 点赞模块的设计思想
11.6.2 12306的设计
11.6.3 秒杀系统的设计

12 微服务
12.1 SOA服务化
12.2 微服务架构
12.3 微服务模式

13 一致性
13.1 一致性理论
13.1.1 CAP
13.1.2 BASE
13.1.3 ACID
13.2 提交协议
13.2.1 两阶段提交协议
13.2.2 三阶段提交协议
13.2.3 TCC
13.3 高级一致性算法
13.3.1 Paxos
13.3.2 Zab
13.3.3 Raft
13.3.4 Gossip
13.3.5 NWR

14 大数据
14.1 谷歌三大论文
14.1.1 MapReduce
14.1.2 GFS
14.1.3 BigTable
14.2 Hadoop
14.3 yarn
14.4 Hbase
14.5 Storm
14.6 Spark
14.7 Mongodb
14.8 Cassandra

15 大规模高并发模式
15.1 负载均衡
15.2 水平伸缩
15.3 集群
15.4 分片
15.5 异步
15.6 消峰

16 线上应急
16.1 应急意识
16.2 应急流程
16.3 应急经历

17 技术攻关
17.1 攻关能力
17.2 攻关过程
17.3 攻关经历

18 性能优化
18.1 应用优化
18.2 JVM优化
18.3 系统优化
18.4 网络优化
18.5 数据库优化

19 开发工具
19.1 开发环境
19.2 svn&git

20 单元测试
20.1 junit
20.2 testng
20.3 mock

21 日志框架
21.1 Commons Logging & Log4j
21.2 Slf4j & logback
21.3 Log4j 2